---
- hosts: pi-gw
  become: true
  remote_user: pi

  tasks:
    - name: Setting hostname (1/2)
      hostname: name={{ hostname }}

    - name: Setting hostname (2/2)
      lineinfile: dest=/etc/hosts regexp="^127.0.1.1" line="127.0.1.1       {{ hostname }}"

    - name: Setting motd
      copy: src=files/motd dest=/etc/motd owner=root group=root mode='0644'

    - name: Setting static ip configuration
      lineinfile:
        dest: /etc/dhcpcd.conf
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
      with_items:
        - regexp: interface eth0
          line: interface eth0
        - regexp: static ip_address={{ static_ip}}
          line: static ip_address={{ static_ip }}
        - regexp: static routers={{ static_gateway }}
          line: static routers={{ static_gateway }}

    - name: Setting static routes
      template:
        src: templates/40-vpnroute.j2
        dest: /lib/dhcpcd/dhcpcd-hooks/40-vpnroute

    - name: Adding my own user
      user: name={{ ssh_user }} comment="Sylvain Houdusse" uid=1027 group=users groups=adm,sudo,gpio,i2c,spi

    - name: Adding my public key
      authorized_key:
        user: "{{ ssh_user }}"
        key: "{{ lookup('file', '/home/syh/.ssh/id_rsa.pub') }}"
        #key: "{{ lookup('file', '/Users/syh/.ssh/id_rsa.pub') }}"

    - name: Disable sudo prompt password for my user
      lineinfile:
        dest: /etc/sudoers
        regexp: "^syh "
        line: "syh ALL=(ALL) NOPASSWD: ALL"

    - name: Disable password authentication
      lineinfile: dest=/etc/ssh/sshd_config regexp="PasswordAuthentication " line="PasswordAuthentication no"
      notify: Restart ssh

    - name: Disable locales env propagation
      lineinfile: dest=/etc/ssh/sshd_config regexp="AcceptEnv LANG LC_*" line="#AcceptEnv LANG LC_*"
      notify: Restart ssh

    - name: Set timezone variables
      copy:
        content: 'Europe/Paris'
        dest: /etc/timezone
        owner: root
        group: root
        mode: '0644'
        backup: yes
      notify:
        - Update timezone

    - name: Install utils packages
      apt: name={{ item }} update_cache=yes cache_valid_time=3600
      with_items:
        - tcpdump
        - tcptrack
        - nmap
        - dnsutils
        - python-dev
        - locate

    - name: Install utils python packages
      pip: name={{ item }}
      with_items:
        - Glances
        - qhue

    - name: Install dnsmasq
      apt: name=dnsmasq update_cache=yes cache_valid_time=3600

    - name: Create dnsmasq configuration dir
      file: path=/var/lib/dnsmasq state=directory

    - name: Configure dnsmasq hosts
      template:
        src: templates/home.hosts.j2
        dest: /var/lib/dnsmasq/home.hosts
      notify: Restart dnsmasq

    - name: Configure dnsmasq dhcp
      template:
        src: templates/home.dhcp.j2
        dest: /var/lib/dnsmasq/home.dhcp
      notify: Restart dnsmasq

    - name: Configure dnsmasq (1/2)
      copy:
        src: files/dnsmasq.conf.j2
        dest: /etc/dnsmasq.d/home.conf
        owner: root
        mode: '0644'
      notify: Restart dnsmasq

    - name: Configure dnsmasq (2/2)
      lineinfile:
        dest: /etc/dnsmasq.conf
        regexp: "conf-dir="
        line: "conf-dir=/etc/dnsmasq.d,*.conf"

    - name: Add dnsmasq script for dash button
      copy:
        src: dhcp-dash-hue.py
        dest: /var/lib/dnsmasq/dhcp-dash-hue.py
        mode: 0755

    - name: Configure dnsmasq log rotation
      copy:
        src: files/dnsmasq-logrotate.conf
        dest: /etc/logrotate.d/dnsmasq

    - name: Copy dnsmasq stats script
      copy:
        src: files/get-dnsmasq-stats.sh
        dest: /home/syh
        owner: syh
        group: users
        mode: 0700

    - name: Install openvpn
      apt: name=openvpn update_cache=yes cache_valid_time=3600

  handlers:
    - name: Restart ssh
      service: name=ssh state=restarted
    - name: Restart dnsmasq
      service: name=dnsmasq state=restarted
    - name: Update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata
